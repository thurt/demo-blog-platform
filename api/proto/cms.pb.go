// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cms.proto

/*
Package cms is a generated protocol buffer package.

It is generated from these files:
	cms.proto

It has these top-level messages:
	Page
	Pages
	Comment
	Comments
	User
	Users
	PageId
	CreatePageRequest
*/
package cms

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Page struct {
	Guid    string `protobuf:"bytes,1,opt,name=guid" json:"guid,omitempty"`
	Title   string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	Created string `protobuf:"bytes,4,opt,name=created" json:"created,omitempty"`
	Edited  string `protobuf:"bytes,5,opt,name=edited" json:"edited,omitempty"`
}

func (m *Page) Reset()                    { *m = Page{} }
func (m *Page) String() string            { return proto.CompactTextString(m) }
func (*Page) ProtoMessage()               {}
func (*Page) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Page) GetGuid() string {
	if m != nil {
		return m.Guid
	}
	return ""
}

func (m *Page) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Page) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Page) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Page) GetEdited() string {
	if m != nil {
		return m.Edited
	}
	return ""
}

type Pages struct {
	Pages []*Page `protobuf:"bytes,1,rep,name=pages" json:"pages,omitempty"`
}

func (m *Pages) Reset()                    { *m = Pages{} }
func (m *Pages) String() string            { return proto.CompactTextString(m) }
func (*Pages) ProtoMessage()               {}
func (*Pages) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Pages) GetPages() []*Page {
	if m != nil {
		return m.Pages
	}
	return nil
}

type Comment struct {
	Author   string `protobuf:"bytes,1,opt,name=author" json:"author,omitempty"`
	Content  string `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
	Created  string `protobuf:"bytes,3,opt,name=created" json:"created,omitempty"`
	Edited   string `protobuf:"bytes,4,opt,name=edited" json:"edited,omitempty"`
	PageGuid string `protobuf:"bytes,5,opt,name=page_guid,json=pageGuid" json:"page_guid,omitempty"`
}

func (m *Comment) Reset()                    { *m = Comment{} }
func (m *Comment) String() string            { return proto.CompactTextString(m) }
func (*Comment) ProtoMessage()               {}
func (*Comment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Comment) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Comment) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Comment) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Comment) GetEdited() string {
	if m != nil {
		return m.Edited
	}
	return ""
}

func (m *Comment) GetPageGuid() string {
	if m != nil {
		return m.PageGuid
	}
	return ""
}

type Comments struct {
	Comments []*Comment `protobuf:"bytes,1,rep,name=comments" json:"comments,omitempty"`
}

func (m *Comments) Reset()                    { *m = Comments{} }
func (m *Comments) String() string            { return proto.CompactTextString(m) }
func (*Comments) ProtoMessage()               {}
func (*Comments) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Comments) GetComments() []*Comment {
	if m != nil {
		return m.Comments
	}
	return nil
}

type User struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Created  string `protobuf:"bytes,3,opt,name=created" json:"created,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

type Users struct {
	Users []*User `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
}

func (m *Users) Reset()                    { *m = Users{} }
func (m *Users) String() string            { return proto.CompactTextString(m) }
func (*Users) ProtoMessage()               {}
func (*Users) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Users) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type PageId struct {
	Guid string `protobuf:"bytes,1,opt,name=guid" json:"guid,omitempty"`
}

func (m *PageId) Reset()                    { *m = PageId{} }
func (m *PageId) String() string            { return proto.CompactTextString(m) }
func (*PageId) ProtoMessage()               {}
func (*PageId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *PageId) GetGuid() string {
	if m != nil {
		return m.Guid
	}
	return ""
}

type CreatePageRequest struct {
	Title   string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
}

func (m *CreatePageRequest) Reset()                    { *m = CreatePageRequest{} }
func (m *CreatePageRequest) String() string            { return proto.CompactTextString(m) }
func (*CreatePageRequest) ProtoMessage()               {}
func (*CreatePageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CreatePageRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreatePageRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func init() {
	proto.RegisterType((*Page)(nil), "cms.Page")
	proto.RegisterType((*Pages)(nil), "cms.Pages")
	proto.RegisterType((*Comment)(nil), "cms.Comment")
	proto.RegisterType((*Comments)(nil), "cms.Comments")
	proto.RegisterType((*User)(nil), "cms.User")
	proto.RegisterType((*Users)(nil), "cms.Users")
	proto.RegisterType((*PageId)(nil), "cms.PageId")
	proto.RegisterType((*CreatePageRequest)(nil), "cms.CreatePageRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Cms service

type CmsClient interface {
	GetPage(ctx context.Context, in *PageId, opts ...grpc.CallOption) (*Page, error)
	CreatePage(ctx context.Context, in *CreatePageRequest, opts ...grpc.CallOption) (*PageId, error)
	DeletePage(ctx context.Context, in *PageId, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	GetPageComments(ctx context.Context, in *PageId, opts ...grpc.CallOption) (*Comments, error)
}

type cmsClient struct {
	cc *grpc.ClientConn
}

func NewCmsClient(cc *grpc.ClientConn) CmsClient {
	return &cmsClient{cc}
}

func (c *cmsClient) GetPage(ctx context.Context, in *PageId, opts ...grpc.CallOption) (*Page, error) {
	out := new(Page)
	err := grpc.Invoke(ctx, "/cms.cms/GetPage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmsClient) CreatePage(ctx context.Context, in *CreatePageRequest, opts ...grpc.CallOption) (*PageId, error) {
	out := new(PageId)
	err := grpc.Invoke(ctx, "/cms.cms/CreatePage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmsClient) DeletePage(ctx context.Context, in *PageId, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/cms.cms/DeletePage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmsClient) GetPageComments(ctx context.Context, in *PageId, opts ...grpc.CallOption) (*Comments, error) {
	out := new(Comments)
	err := grpc.Invoke(ctx, "/cms.cms/GetPageComments", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Cms service

type CmsServer interface {
	GetPage(context.Context, *PageId) (*Page, error)
	CreatePage(context.Context, *CreatePageRequest) (*PageId, error)
	DeletePage(context.Context, *PageId) (*google_protobuf1.Empty, error)
	GetPageComments(context.Context, *PageId) (*Comments, error)
}

func RegisterCmsServer(s *grpc.Server, srv CmsServer) {
	s.RegisterService(&_Cms_serviceDesc, srv)
}

func _Cms_GetPage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PageId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmsServer).GetPage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cms.cms/GetPage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmsServer).GetPage(ctx, req.(*PageId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cms_CreatePage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmsServer).CreatePage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cms.cms/CreatePage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmsServer).CreatePage(ctx, req.(*CreatePageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cms_DeletePage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PageId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmsServer).DeletePage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cms.cms/DeletePage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmsServer).DeletePage(ctx, req.(*PageId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cms_GetPageComments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PageId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmsServer).GetPageComments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cms.cms/GetPageComments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmsServer).GetPageComments(ctx, req.(*PageId))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cms_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cms.cms",
	HandlerType: (*CmsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPage",
			Handler:    _Cms_GetPage_Handler,
		},
		{
			MethodName: "CreatePage",
			Handler:    _Cms_CreatePage_Handler,
		},
		{
			MethodName: "DeletePage",
			Handler:    _Cms_DeletePage_Handler,
		},
		{
			MethodName: "GetPageComments",
			Handler:    _Cms_GetPageComments_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cms.proto",
}

func init() { proto.RegisterFile("cms.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 456 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x71, 0xe2, 0x38, 0xc9, 0x84, 0xaa, 0xea, 0x0a, 0x22, 0xcb, 0xad, 0x44, 0xb5, 0xa7,
	0xa8, 0x07, 0x5b, 0x2a, 0x1c, 0x10, 0xd7, 0x14, 0x95, 0xde, 0x90, 0x25, 0xce, 0x68, 0x1b, 0x0f,
	0xc1, 0x52, 0xec, 0x0d, 0xde, 0xf5, 0x01, 0x01, 0x12, 0xe2, 0xc8, 0x95, 0x47, 0xe3, 0x15, 0x78,
	0x10, 0x34, 0xb3, 0x9b, 0x3f, 0xae, 0xea, 0xdb, 0xce, 0x7c, 0xab, 0x6f, 0x7f, 0xfb, 0xcd, 0x2e,
	0x4c, 0x57, 0x95, 0x49, 0xb7, 0x8d, 0xb6, 0x5a, 0x0c, 0x57, 0x95, 0x49, 0x2e, 0xd6, 0x5a, 0xaf,
	0x37, 0x98, 0xa9, 0x6d, 0x99, 0xa9, 0xba, 0xd6, 0x56, 0xd9, 0x52, 0xd7, 0x7e, 0x4b, 0x72, 0xee,
	0x55, 0xae, 0xee, 0xdb, 0x4f, 0x19, 0x56, 0x5b, 0xfb, 0xd5, 0x89, 0xf2, 0x3b, 0x84, 0xef, 0xd5,
	0x1a, 0x85, 0x80, 0x70, 0xdd, 0x96, 0x45, 0x1c, 0x5c, 0x06, 0x8b, 0x69, 0xce, 0x6b, 0xf1, 0x0c,
	0x46, 0xb6, 0xb4, 0x1b, 0x8c, 0x07, 0xdc, 0x74, 0x85, 0x88, 0x61, 0xbc, 0xd2, 0xb5, 0xc5, 0xda,
	0xc6, 0x43, 0xee, 0xef, 0x4a, 0x56, 0x1a, 0x54, 0x16, 0x8b, 0x38, 0xf4, 0x8a, 0x2b, 0xc5, 0x1c,
	0x22, 0x2c, 0x4a, 0x12, 0x46, 0x2c, 0xf8, 0x4a, 0x2e, 0x60, 0x44, 0xa7, 0x1b, 0xf1, 0x02, 0x46,
	0x5b, 0x5a, 0xc4, 0xc1, 0xe5, 0x70, 0x31, 0xbb, 0x9e, 0xa6, 0x74, 0x43, 0x92, 0x72, 0xd7, 0x97,
	0xbf, 0x03, 0x18, 0x2f, 0x75, 0x55, 0xd1, 0x39, 0x73, 0x88, 0x54, 0x6b, 0x3f, 0xeb, 0xc6, 0xd3,
	0xfa, 0xea, 0x98, 0x6c, 0xd0, 0x4b, 0x36, 0xec, 0x23, 0x0b, 0x8f, 0xc9, 0xc4, 0x39, 0x4c, 0xe9,
	0xe0, 0x8f, 0x1c, 0x8a, 0x83, 0x9e, 0x50, 0xe3, 0xb6, 0x2d, 0x0b, 0xf9, 0x0a, 0x26, 0x9e, 0xc5,
	0x88, 0x05, 0x4c, 0x56, 0x7e, 0xed, 0xe1, 0x9f, 0x32, 0xbc, 0xdf, 0x90, 0xef, 0x55, 0x99, 0x43,
	0xf8, 0xc1, 0x60, 0x23, 0x12, 0x98, 0xb4, 0x06, 0x9b, 0x5a, 0x55, 0xe8, 0x2f, 0xb0, 0xaf, 0x29,
	0x72, 0xac, 0x54, 0xb9, 0xd9, 0x45, 0xce, 0x45, 0x3f, 0x3e, 0x05, 0x48, 0x9e, 0x1c, 0x20, 0x99,
	0x74, 0x03, 0x24, 0x29, 0x77, 0x7d, 0x79, 0x01, 0x11, 0xe5, 0x79, 0x57, 0x3c, 0x36, 0x6a, 0xb9,
	0x84, 0xb3, 0x25, 0x5b, 0x72, 0xe6, 0xf8, 0xa5, 0x45, 0x63, 0x0f, 0xf3, 0x0f, 0x7a, 0xe6, 0xdf,
	0x4d, 0xf9, 0xfa, 0xe7, 0x00, 0xe8, 0x39, 0x8a, 0xd7, 0x30, 0xbe, 0x45, 0xcb, 0xcf, 0x6a, 0xb6,
	0x1f, 0xe4, 0x5d, 0x91, 0x1c, 0xa6, 0x2a, 0x9f, 0xff, 0xfa, 0xfb, 0xef, 0xcf, 0xe0, 0x54, 0x9c,
	0x64, 0x3c, 0xde, 0xec, 0x1b, 0x51, 0xfc, 0x10, 0x37, 0x00, 0x07, 0x0c, 0x31, 0x77, 0x41, 0x3e,
	0xe4, 0x4a, 0x8e, 0x4d, 0xe5, 0x19, 0x3b, 0xcd, 0x64, 0xe4, 0x9c, 0xde, 0x04, 0x57, 0xe2, 0x1d,
	0xc0, 0x0d, 0x6e, 0xd0, 0xbb, 0x74, 0x10, 0xe6, 0xa9, 0xfb, 0x0c, 0xe9, 0xee, 0x33, 0xa4, 0x6f,
	0xe9, 0x33, 0xec, 0x78, 0xae, 0x1e, 0xf0, 0x64, 0x70, 0xea, 0x6f, 0xb2, 0x9f, 0x77, 0xc7, 0xee,
	0xe4, 0x78, 0xd4, 0x46, 0x3e, 0xb9, 0x8f, 0xd8, 0xf7, 0xe5, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xa3, 0xe8, 0xc3, 0xff, 0xa2, 0x03, 0x00, 0x00,
}
