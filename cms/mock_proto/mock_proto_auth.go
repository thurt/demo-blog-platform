// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/thurt/demo-blog-platform/cms/proto (interfaces: CmsAuthServer)

// Package mock_proto is a generated GoMock package.
package mock_proto

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	proto "github.com/thurt/demo-blog-platform/cms/proto"
	context "golang.org/x/net/context"
)

// MockCmsAuthServer is a mock of CmsAuthServer interface
type MockCmsAuthServer struct {
	ctrl     *gomock.Controller
	recorder *MockCmsAuthServerMockRecorder
}

// MockCmsAuthServerMockRecorder is the mock recorder for MockCmsAuthServer
type MockCmsAuthServerMockRecorder struct {
	mock *MockCmsAuthServer
}

// NewMockCmsAuthServer creates a new mock instance
func NewMockCmsAuthServer(ctrl *gomock.Controller) *MockCmsAuthServer {
	mock := &MockCmsAuthServer{ctrl: ctrl}
	mock.recorder = &MockCmsAuthServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCmsAuthServer) EXPECT() *MockCmsAuthServerMockRecorder {
	return m.recorder
}

// ActivateNewTokenForUser mocks base method
func (m *MockCmsAuthServer) ActivateNewTokenForUser(arg0 context.Context, arg1 *proto.User) (*proto.AccessToken, error) {
	ret := m.ctrl.Call(m, "ActivateNewTokenForUser", arg0, arg1)
	ret0, _ := ret[0].(*proto.AccessToken)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ActivateNewTokenForUser indicates an expected call of ActivateNewTokenForUser
func (mr *MockCmsAuthServerMockRecorder) ActivateNewTokenForUser(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ActivateNewTokenForUser", reflect.TypeOf((*MockCmsAuthServer)(nil).ActivateNewTokenForUser), arg0, arg1)
}
