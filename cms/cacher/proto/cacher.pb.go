// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cacher.proto

/*
Package cacher is a generated protocol buffer package.

It is generated from these files:
	cacher.proto

It has these top-level messages:
	SetRequest
	GetRequest
*/
package cacher

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"
import google_protobuf1 "github.com/golang/protobuf/ptypes/wrappers"
import google_protobuf2 "github.com/golang/protobuf/ptypes/duration"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SetRequest struct {
	Key   string                     `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string                     `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Ttl   *google_protobuf2.Duration `protobuf:"bytes,3,opt,name=ttl" json:"ttl,omitempty"`
}

func (m *SetRequest) Reset()                    { *m = SetRequest{} }
func (m *SetRequest) String() string            { return proto.CompactTextString(m) }
func (*SetRequest) ProtoMessage()               {}
func (*SetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SetRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SetRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *SetRequest) GetTtl() *google_protobuf2.Duration {
	if m != nil {
		return m.Ttl
	}
	return nil
}

type GetRequest struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func init() {
	proto.RegisterType((*SetRequest)(nil), "cacher.SetRequest")
	proto.RegisterType((*GetRequest)(nil), "cacher.GetRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Cacher service

type CacherClient interface {
	// Set a key/value pair
	Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	// Get a value by key
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*google_protobuf1.StringValue, error)
}

type cacherClient struct {
	cc *grpc.ClientConn
}

func NewCacherClient(cc *grpc.ClientConn) CacherClient {
	return &cacherClient{cc}
}

func (c *cacherClient) Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/cacher.Cacher/Set", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacherClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*google_protobuf1.StringValue, error) {
	out := new(google_protobuf1.StringValue)
	err := grpc.Invoke(ctx, "/cacher.Cacher/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Cacher service

type CacherServer interface {
	// Set a key/value pair
	Set(context.Context, *SetRequest) (*google_protobuf.Empty, error)
	// Get a value by key
	Get(context.Context, *GetRequest) (*google_protobuf1.StringValue, error)
}

func RegisterCacherServer(s *grpc.Server, srv CacherServer) {
	s.RegisterService(&_Cacher_serviceDesc, srv)
}

func _Cacher_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacherServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cacher.Cacher/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacherServer).Set(ctx, req.(*SetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cacher_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacherServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cacher.Cacher/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacherServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cacher_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cacher.Cacher",
	HandlerType: (*CacherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Set",
			Handler:    _Cacher_Set_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Cacher_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cacher.proto",
}

func init() { proto.RegisterFile("cacher.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 229 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0x4e, 0x4c, 0xce,
	0x48, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0xa4, 0xa4, 0xd3, 0xf3,
	0xf3, 0xd3, 0x73, 0x52, 0xf5, 0xc1, 0xa2, 0x49, 0xa5, 0x69, 0xfa, 0xa9, 0xb9, 0x05, 0x25, 0x95,
	0x10, 0x45, 0x52, 0x72, 0xe8, 0x92, 0xe5, 0x45, 0x89, 0x05, 0x05, 0xa9, 0x45, 0xc5, 0xb8, 0xe4,
	0x53, 0x4a, 0x8b, 0x12, 0x4b, 0x32, 0xf3, 0xf3, 0x20, 0xf2, 0x4a, 0x89, 0x5c, 0x5c, 0xc1, 0xa9,
	0x25, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x02, 0x5c, 0xcc, 0xd9, 0xa9, 0x95, 0x12,
	0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x20, 0xa6, 0x90, 0x08, 0x17, 0x6b, 0x59, 0x62, 0x4e, 0x69,
	0xaa, 0x04, 0x13, 0x58, 0x0c, 0xc2, 0x11, 0xd2, 0xe6, 0x62, 0x2e, 0x29, 0xc9, 0x91, 0x60, 0x56,
	0x60, 0xd4, 0xe0, 0x36, 0x92, 0xd4, 0x83, 0xd8, 0xa1, 0x07, 0xb3, 0x43, 0xcf, 0x05, 0x6a, 0x47,
	0x10, 0x48, 0x95, 0x92, 0x1c, 0x17, 0x97, 0x3b, 0x1e, 0x2b, 0x8c, 0x2a, 0xb8, 0xd8, 0x9c, 0xc1,
	0x3e, 0x15, 0x32, 0xe6, 0x62, 0x0e, 0x4e, 0x2d, 0x11, 0x12, 0xd2, 0x83, 0x86, 0x03, 0xc2, 0x65,
	0x52, 0x62, 0x18, 0x96, 0xb8, 0x82, 0x42, 0x41, 0x89, 0x41, 0xc8, 0x92, 0x8b, 0xd9, 0x1d, 0x59,
	0x13, 0xc2, 0x2e, 0x29, 0x19, 0x0c, 0x4d, 0xc1, 0x25, 0x45, 0x99, 0x79, 0xe9, 0x61, 0x20, 0x4f,
	0x28, 0x31, 0x24, 0xb1, 0x81, 0xc5, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x78, 0x14, 0xda,
	0x00, 0x78, 0x01, 0x00, 0x00,
}
